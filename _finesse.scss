///
/// Finesse
///
/// Finesse is a CSS toolkit employed by Evolution 7 which utilises core parts
/// of inuit.css as well as learnings from bourbon.io among other css libraries.
///
/// All credit goes to Harry Roberts (http://csswizardry.com/) for the modified
/// version of inuit.css v6 (https://github.com/csswizardry/inuit.css/)
/// as a base for Finesse together with an adaptation of csswizardry-grids
/// (http://csswizardry.com/csswizardry-grids/) for the grid system.
///
/// Also to Bourbon.io (http://bourbon.io/) for a slightly modified version of
/// their Bitters scaffold styles (http://bitters.bourbon.io/).
///

///
/// Settings
/// Global variable files.
///
@import "settings/responsive";
@import "settings/colours";
@import "settings/defaults";

///
/// Tools
/// Globally available tools and mixins.
///
@import "tools/arrow";
@import "tools/headings";
@import "tools/responsive";
@import "tools/device-type";
@import "tools/buttons";
@import "tools/colour-it";

///
/// Generic
/// Normalize.css and low specificty global styles.
///
@import "generic/normalize";
@import "generic/box-sizing";

///
/// Base
/// Our default styling of the most commonly used HTML tags. It uses a modified
/// version of Bourbon Bitters to add opinionated base styles which our designs
/// should be aware of.
///
/// As with the entire framework, any default styling that is continually
/// overwritten should be re-evaluated.
///
@import "base/buttons";
@import "base/forms";
@import "base/lists";
@import "base/tables";
@import "base/typography";

///
/// Objects
/// Common patterns for the creation of more complex components. Objects
/// will rarely me be used without modification and are most commonly included
/// via the `@extend` directive.
///
@import "objects/alerts";
@import "objects/block-list";
@import "objects/flag";
@import "objects/grid";
@import "objects/island";
@import "objects/media";
@import "objects/nav";
@import "objects/split";
@import "objects/buttons";

///
/// Components
/// More complete design patterns that can potentially used without modification
/// for 'quick wins'. Some components provide a modifer class `--finesse` which
/// will provide a more opinionated design layer on top of the base component.
///
@import "components/lozenge";
@import "components/pagination";
@import "components/prototype";
@import "components/stats";
@import "components/footer";
@import "components/modal";
@import "components/card";

///
/// Trumps
/// Overrides, helpers and utilities normally used to only affect one piece of
/// the DOM at a time. These classes may use !important.
///
@import "trumps/clearfix";
@import "trumps/colours";
@import "trumps/columns";
@import "trumps/spacing";
@import "trumps/visibility";
@import "trumps/widths";
